apply plugin: 'idea'

buildscript {
    ext.kotlin_version = '1.0.5'
    repositories {
        mavenCentral()
        maven {url 'https://plugins.gradle.org/m2/'}
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'gradle.plugin.com.jetbrains.python:gradle-python-envs:0.0.8'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = "org.physics.mamca.MainKt"

apply plugin: 'com.jetbrains.python.envs'

envs {
    bootstrapDirectory = new File(buildDir, 'pythons')
    envsDirectory = new File(buildDir, 'envs')
    minicondaVersion = 'latest'
    packages = ['pip', 'setuptools']

    conda 'Python_3_5', '3.5', ['numpy', 'matplotlib'], true
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.8.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'org.apache.directory.studio:org.apache.commons.io:2.4'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets {
    main.kotlin.srcDirs += 'src/main'
    test.kotlin.srcDirs += 'src/test'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

def pythonPath = './build/envs/Python_3_5/python'

task create_and_draw(type:Exec) {
    group = 'python tasks'
    workingDir './coordinator'

    commandLine pythonPath, 'create_and_draw.py'
}

task test_py(type: Exec, dependsOn: 'jar') {
    group = 'python tasks'
    workingDir './'

    commandLine pythonPath, 'coordinator/test.py'
}

jar {
    manifest {
        attributes 'Main-Class': "org.physics.mamca.MainKt"
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}